@page "/calculator"
@inject HttpClient Http
@using System.Net.Http
@using System.Text.Json
@using BlazorApp2.Client.Models
@using System.Net.Http.Headers;
<h1>Calculator</h1>

<p>Enter two numbers and select an operation:</p>

<label for="firstNumber">First number:</label>
<input id="firstNumber" @bind-value="@calcInput.FirstNumber" type="number" />

<label for="secondNumber">Second number:</label>
<input id="secondNumber" @bind="@calcInput.SecondNumber" type="number" />

<select @bind="@calcInput.SelectedOperation">
    <option value="add">Add</option>
    <option value="subtract">Subtract</option>
    <option value="multiply">Multiply</option>
    <option value="divide">Divide</option>
</select>

<button @onclick="Calculate">Calculate</button>

@if (calcInput.Result != null)
{
    <p>Result: @calcInput.Result</p>
}


@code {
    public CalculationModel calcInput { get; set; } = new CalculationModel();
    private async Task Calculate()
    {
        Http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
        // Make API call to calculate result
        var apiUrl = "api/CalcApi/Calculate";
        var jsonInput = JsonSerializer.Serialize(calcInput);
        //var data = new { FirstNumber, SecondNumber, Operation = SelectedOperation };
        var response = await Http.PostAsJsonAsync(apiUrl, jsonInput);

        // Get result from response
        if (response.IsSuccessStatusCode)
        {
            calcInput.Result = await response.Content.ReadFromJsonAsync<int>();
            Console.WriteLine(calcInput.Result);
        }
        else
        {
            var errorMessage = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"API error: {errorMessage}");
        }

        // Clear input fields
        //calcInput.FirstNumber = null;
        //calcInput.SecondNumber = null;
    }
}
